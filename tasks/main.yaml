---
# tasks file

- name: Download and extract grafana to "/opt"
  unarchive:
    src: "{{ grafana_dl }}"
    dest: "{{ dl }}"
    remote_src: yes

- name: Standardize folder name for Grafana
  shell: mv /opt/graf* "{{ grafana_location }}"

- name: Create OpenSSL certificates for Grafana
  shell: mkdir "{{ ssl_path }}" && openssl req -newkey rsa:2048 -nodes -keyout "{{ ssl_path }}"/"{{ key_name }}" -x509 -days 365 -out "{{ ssl_path }}"/"{{ cert_name }}"
 
- name: Enable HTTPS for Grafana
  template:
    src: "{{ grafana_config }}"
    dest: "{{ grafana_config_dest }}"

- name: Service creation for Grafana
  template:
    src: "{{ grafana_service_template }}"
    dest: "{{ grafana_service_dest }}"
  notify: enable and start Grafana
  

#- name: Download and extract nodexporter to "/opt"
#  unarchive:
#    src: "{{node_exporter_dl}}"
#    dest: "{{ dl }}"
#    remote_src: yes

#- name: Service creation for Node-Exporter
#  command: mv /opt/node* "{{ node-exporter }}"
#  template:
#    src: "{{ node-exporter-service }}"
#    dest: "{{ node-exporter-dest }}"
#  notify: enable node-exporter

#- name: Download and extract haproxy to "/opt"
#  unarchive:
#    src: "{{haproxy_dl}}"
#    dest: "{{ dl }}"
#    remote_src: yes
    
#- name: Build HA-Proxy
#  command: 

    
#- name: Redirect HA-Proxy Port:80 to Grafana:443
  
#- name: Service creation for HA-Proxy
#  command: mv /opt/hapr* "{{ ha-proxy }}" 
#  template:
#    src: "{{ haproxy-service }}"
#    dest: "{{ haproxy-service-dest }}"
#  notify: enable haproxy